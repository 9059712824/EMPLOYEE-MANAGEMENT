@model List<EMPLOYEE_MANAGEMENT.DTO.EmployeeDetails>

<!DOCTYPE html>
<html>
<head>
    <title>View Employees</title>
    <style>
        table {
            border-collapse: collapse;
            width: 105%;
        }

            table th {
                background-color: #f2f2f2;
                font-weight: bold;
                text-align: left;
                padding: 8px;
            }

            table td {
                border: 1px solid #ddd;
                padding: 8px;
            }

            table tr:hover {
                background-color: #e0e0e0;
            }

    </style>
    <link href="//maxcdn.bootstrapcdn.com/bootstrap/3.3.0/css/bootstrap.min.css" rel="stylesheet" id="bootstrap-css">
    <script src="//maxcdn.bootstrapcdn.com/bootstrap/3.3.0/js/bootstrap.min.js"></script>
    <script src="//code.jquery.com/jquery-1.11.1.min.js"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11.0.18/dist/sweetalert2.all.min.js"></script>

    <script>
    function confirmDelete(id) {
        Swal.fire({
            title: 'Are you sure about deleting this employee?',
            //text: 'You won\'t be able to revert this!',
            icon: 'warning',
            showCancelButton: true,
            confirmButtonText: 'Yes, delete it!',
            cancelButtonText: 'No, cancel',
            reverseButtons: true
        }).then((result) => {
            if (result.isConfirmed) {
                $.ajax({
                    url: '@Url.Action("DeleteUserDetails", "Home")',
                    type: 'POST',
                    data: { id: id },
                    success: function (response) {
                        // Handle success response
                        Swal.fire('Deleted!', 'The Users has been deleted.', 'success').then(() => {
                            // Redirect to a new page or perform any other action
                            window.location.href = '@Url.Action("ViewEmployeesDetails", "Home")';
                        });
                    },
                    error: function (xhr, status, error) {
                        // Handle error response
                        Swal.fire('Error!', 'An error occurred while deleting the employee.', 'error');
                    }
                });
            }
        });
    }
        $(document).ready(function () {
            $("#deleteAllButton").click(function () {
                var selectedItems = [];

                // Collect IDs of selected items
                $(".checkbox-item").each(function () {
                    if ($(this).is(":checked")) {
                        // Get the value (ID) associated with the checkbox
                        var itemId = parseInt($(this).val());
                        selectedItems.push(itemId);
                    }
                });
                Swal.fire({
                    title: 'Are you sure about deleting these employees?',
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonText: 'Yes, delete them!',
                    cancelButtonText: 'No, cancel',
                    reverseButtons: true
                }).then((result) => {
                    if (result.isConfirmed) {
                        $.ajax({
                            url: '@Url.Action("DeleteAll", "Home")',
                            type: 'POST',
                            data: { ids: selectedItems },
                            success: function (response) {
                                // Handle success response
                                if (response.success) {
                                    Swal.fire('Deleted!', 'The employees have been deleted.', 'success').then(() => {
                                        window.location.href = '@Url.Action("ViewEmployeesDetails", "Home")';
                                    });
                                } else {
                                    Swal.fire('Error!', 'An error occurred while deleting the employees.', 'error');
                                }
                            },
                            error: function (xhr, status, error) {
                                // Handle error response
                                Swal.fire('Error!', 'An error occurred while deleting the employees.', 'error');
                            }

                        });
                    }
                });
            });

            // Select/deselect all checkboxes
            $("#checkAll").change(function () {
                $(".checkbox-item").prop("checked", $(this).prop("checked"));
            });

            // Check if all checkboxes are selected and update the "Select All" checkbox accordingly
            $(".checkbox-item").change(function () {
                var allChecked = true;

                $(".checkbox-item").each(function () {
                    if (!$(this).prop("checked")) {
                        allChecked = false;
                        return false; // Exit the loop if any checkbox is not checked
                    }
                });

                $("#checkAll").prop("checked", allChecked);
            });


            // Deselect "Select All" checkbox if any individual checkbox is deselected
            $(".checkbox-item").change(function () {
                if (!$(this).prop("checked")) {
                    $("#checkAll").prop("checked", false);
                }
            });
        });
    </script>
</head>
<body>
    <h1>Employee Details</h1>

    @if (Model.Count == 0)
    {
        <p>No employees found.</p>
    }
    else
    {
        <div class="form-group d-flex justify-content-end">
            @using (Html.BeginForm("ViewEmployeesDetails", "Home", null, FormMethod.Post))
            {
                <div class="input-group" style="text-align: center">
                    @Html.TextBox("searchString", ViewBag.CurrentFilter as string, new { @class = "form-control", @placeholder = "Search..." })
                    <div class="input-group-btn">
                        <input type="submit" value="Search" class="btn btn-primary" style=" display: inline-block" />
                    </div>
                </div>
            }
        </div>
        <button id="deleteAllButton" class="btn btn-danger" style="float: right;">DeleteAll</button>
        <br />
        <table>
            <tr>
                <th><input type="checkbox" id="checkAll"></th>
                <th>Email</th>
                <th>Role</th>
                <th>First Name</th>
                <th>Last Name</th>
                <th>Employee Number</th>
                <th>Gender</th>
                <th>DOB</th>
                <th>Age</th>
                <th>Address</th>
                <th>Department</th>
                <th>Salary</th>
                <th>Actions</th>
            </tr>

            @foreach (var item in Model)
            {
                <tr>
                    <td><input type="checkbox" class="checkbox-item" value="@item.UserId"></td>
                    <td>@item.Email</td>
                    <td>@item.Role</td>
                    <td>@item.FirstName</td>
                    <td>@item.LastName</td>
                    <td>@item.Number</td>
                    <td>@item.Gender</td>
                    <td>@item.DOB.ToLongDateString()</td>
                    <td>@item.Age</td>
                    <td>@item.Address</td>
                    <td>@item.Department</td>
                    <td>@item.Salary</td>
                    <td>
                        <a href="@Url.Action("ViewAcademicAndExperienceDetails",new { id=item.UserId })" class="btn btn-primary">
                            <span class="glyphicon glyphicon-eye-open"></span>
                        </a>
                        @if(Context.Session.GetString("Role") == "ADMIN" || Context.Session.GetString("Role") == "DEPARTMEN_HEAD" || Context.Session.GetString("UserId") == item.DepartmentHead.ToString())
                        {
                            <a href="@Url.Action("UpdateUserDetails", new { id = item.UserId })" class="btn btn-warning">
                            <span class="glyphicon glyphicon-pencil"></span></a>
                            <a href="#" onclick="confirmDelete('@item.UserId')" class="btn btn-danger">
                            <span class="glyphicon glyphicon-trash"></span></a>
                        }
                        else
                        {
                        }
                    </td>
                </tr>
            }
        </table>
        <br />
    }
    <a href="@Url.Action("Index")" button type="submit" class="btn btn-primary">Back</a>
</body>
</html>