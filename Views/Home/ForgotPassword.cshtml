@model EMPLOYEE_MANAGEMENT.DTO.ForgotPasswordDTO
@{
    ViewBag.Title = "Email";
}
<form method="post" action="ForgotPassword" class="mt-5" onsubmit="return validateForm()">
    <div class="mb-3">
        <label for="OTP" class="form-label">OTP</label>
        <input type="number" class="form-control" id="OTP" asp-for="OTP" required>
    </div>
    <div class="mb-3">
        <label for="Password" class="form-label">Password</label>
        <input type="password" class="form-control" id="Password" asp-for="Password" required>
    </div>
    <div class="mb-3">
        <label for="ConfirmPassword" class="form-label">Confirm Password</label>
        <input type="password" class="form-control" id="ConfirmPassword" asp-for="ConfirmPassword" required>
    </div>
    <button type="submit" class="btn btn-primary">Submit</button>
</form>

<script>
    function validateForm() {
        // Get the password input value
        var password = document.getElementById('Password').value;
        var confirmPassword = document.getElementById('ConfirmPassword').value;

        // Check password constraints
        var constraints = getPasswordConstraints(password);
        if (constraints !== "") {
            alert(constraints); // Display password constraints in an alert
            return false; // Don't submit the form if password constraints are not met
        }

        // Check if password and confirm password match
        if (password !== confirmPassword) {
            alert("Password and Confirm Password do not match."); // Display alert for password mismatch
            return false; // Don't submit the form if passwords don't match
        }

        return true; // Submit the form if all validations pass
    }

    function getPasswordConstraints(password) {
        // Set password constraints here
        var constraints = "";
        var minLength = 8; // Minimum password length
        var uppercaseRegex = /[A-Z]/; // Regular expression for uppercase letters
        var lowercaseRegex = /[a-z]/; // Regular expression for lowercase letters
        var numberRegex = /\d/; // Regular expression for numbers
        var specialCharRegex = /\W/; // Regular expression for special characters (non-alphanumeric)

        // Check minimum length
        if (password.length < minLength) {
            constraints += "Password must be at least " + minLength + " characters long.\n";
        }

        // Check for uppercase letter
        if (!uppercaseRegex.test(password)) {
            constraints += "Password must contain at least one uppercase letter.\n";
        }

        // Check for lowercase letter
        if (!lowercaseRegex.test(password)) {
            constraints += "Password must contain at least one lowercase letter.\n";
        }

        // Check for number
        if (!numberRegex.test(password)) {
            constraints += "Password must contain at least one number.\n";
        }

        // Check for special character
        if (!specialCharRegex.test(password)) {
            constraints += "Password must contain at least one special character \n";
        }

        return constraints;
    }
</script>
