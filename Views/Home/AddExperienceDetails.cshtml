@model EMPLOYEE_MANAGEMENT.DTO.ExperienceDTO
@{
    ViewBag.Title = "Add Experience Details";
}
<form method="post" action="AddExperienceDetails" class="mt-5" enctype="multipart/form-data">
    <div id="academicContainer">
        <div class="academicEntry">
            <div class="mb-3">
                <label for="CompanyName" class="form-label">Company Name</label>
                <input type="text" class="form-control" name="CompanyName" asp-for="CompanyName" required>
            </div>
            <div class="mb-3">
                <label for="StartDate" class="form-label">Start Date</label>
                <input type="date" class="form-control" name="StartDate" asp-for="StartDate" required>
            </div>
            <div class="mb-3">
                <label for="EndDate" class="form-label">End Date</label>
                <input type="date" class="form-control" name="EndDate" asp-for="EndDate" required>
            </div>
            <div class="mb-3">
                <label for="YearsOfWorking" class="form-label">Years of Working</label>
                <input type="text" class="form-control" name="YearsOfWorking" id="YearsOfWorking" asp-for="YearsOfWorking" readonly>
            </div>
            <div class="mb-3">
                <label for="proof" class="form-label">Proof</label>
                <input type="file" name="proof" required />
            </div>
        </div>
    </div>
    <button type="submit" class="btn btn-primary">Submit</button>
</form>

<script>
    var startDateInput = document.querySelector("input[name='StartDate']");
    var endDateInput = document.querySelector("input[name='EndDate']");
    var yearsOfWorkingInput = document.querySelector("#YearsOfWorking");

    startDateInput.addEventListener("change", calculateYearsOfWorking);
    endDateInput.addEventListener("change", calculateYearsOfWorking);

    function calculateYearsOfWorking() {
        var startDate = new Date(startDateInput.value);
        var endDate = new Date(endDateInput.value);

        // Calculate the difference in years, months, and days
        var yearsDiff = endDate.getFullYear() - startDate.getFullYear();
        var monthsDiff = endDate.getMonth() - startDate.getMonth();
        var daysDiff = endDate.getDate() - startDate.getDate();

        // Adjust for negative values in months and days
        if (daysDiff < 0) {
            monthsDiff--;
            var lastDayOfMonth = new Date(endDate.getFullYear(), endDate.getMonth(), 0).getDate();
            daysDiff += lastDayOfMonth;
        }

        if (monthsDiff < 0) {
            yearsDiff--;
            monthsDiff += 12;
        }

        // Update the input field with the calculated years, months, and days
        yearsOfWorkingInput.value = yearsDiff + " Years, " + monthsDiff + " Months, " + daysDiff + " Days";
    }
</script>

