// <auto-generated />
using System;
using EMPLOYEE_MANAGEMENT.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EMPLOYEE_MANAGEMENT.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EMPLOYEE_MANAGEMENT.Models.AcademicAndExperienceView", b =>
                {
                    b.Property<int>("AcademicEndYear")
                        .HasColumnType("int");

                    b.Property<string>("AcademicFilename")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AcademicName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("AcademicProof")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("AcademicStartYear")
                        .HasColumnType("int");

                    b.Property<Guid>("AcademicUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ExperienceCompanyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ExperienceEndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExperienceFilename")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("ExperienceProof")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<Guid>("ExperienceUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ExperienceYearsOfWorking")
                        .HasColumnType("int");

                    b.Property<DateTime>("ExprienceStartDate")
                        .HasColumnType("datetime2");

                    b.ToTable((string)null);

                    b.ToView("AcademicsAndExperienceView", (string)null);
                });

            modelBuilder.Entity("EMPLOYEE_MANAGEMENT.Models.AcademicDetails", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EndYear")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StartYear")
                        .HasColumnType("int");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("fileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("proof")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("AcademicDetails");
                });

            modelBuilder.Entity("EMPLOYEE_MANAGEMENT.Models.Department", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DepartmentHead")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentHead");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("EMPLOYEE_MANAGEMENT.Models.Experience", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("YearsOfWorking")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("proof")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Experience");
                });

            modelBuilder.Entity("EMPLOYEE_MANAGEMENT.Models.User", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("OTP")
                        .HasColumnType("float");

                    b.Property<DateTime>("OTPGeneratedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfilesetupCompleted")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("EMPLOYEE_MANAGEMENT.Models.UserDetails", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<DateTime>("DOB")
                        .HasColumnType("datetime2");

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("DepartmentHead")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Number")
                        .HasColumnType("float");

                    b.Property<double>("Salary")
                        .HasColumnType("float");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("UserDetails");
                });

            modelBuilder.Entity("EMPLOYEE_MANAGEMENT.Models.AcademicDetails", b =>
                {
                    b.HasOne("EMPLOYEE_MANAGEMENT.Models.User", "User")
                        .WithOne("AcademicDetails")
                        .HasForeignKey("EMPLOYEE_MANAGEMENT.Models.AcademicDetails", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("EMPLOYEE_MANAGEMENT.Models.Department", b =>
                {
                    b.HasOne("EMPLOYEE_MANAGEMENT.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("DepartmentHead")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("EMPLOYEE_MANAGEMENT.Models.Experience", b =>
                {
                    b.HasOne("EMPLOYEE_MANAGEMENT.Models.User", "User")
                        .WithOne("Experience")
                        .HasForeignKey("EMPLOYEE_MANAGEMENT.Models.Experience", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("EMPLOYEE_MANAGEMENT.Models.UserDetails", b =>
                {
                    b.HasOne("EMPLOYEE_MANAGEMENT.Models.User", "User")
                        .WithOne("UserDetails")
                        .HasForeignKey("EMPLOYEE_MANAGEMENT.Models.UserDetails", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("EMPLOYEE_MANAGEMENT.Models.User", b =>
                {
                    b.Navigation("AcademicDetails")
                        .IsRequired();

                    b.Navigation("Experience")
                        .IsRequired();

                    b.Navigation("UserDetails")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
